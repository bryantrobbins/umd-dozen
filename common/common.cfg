#!/bin/bash 

#
#  Copyright (c) 2009-@year@. The  GUITAR group  at the University of
#  Maryland. Names of owners of this group may be obtained by sending
#  an e-mail to atif@cs.umd.edu
#
#  Permission is hereby granted, free of charge, to any person obtaining
#  a copy of this software and associated documentation files
#  (the "Software"), to deal in the Software without restriction,
#  including without limitation  the rights to use, copy, modify, merge,
#  publish,  distribute, sublicense, and/or sell copies of the Software,
#  and to  permit persons  to whom  the Software  is furnished to do so,
#  subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included
#  in all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#  MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#  IN NO  EVENT SHALL THE  AUTHORS OR COPYRIGHT  HOLDERS BE LIABLE FOR ANY
#  CLAIM, DAMAGES OR  OTHER LIABILITY,  WHETHER IN AN  ACTION OF CONTRACT,
#  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

####################################################
# Common configurations for all application under test 
#
#	By	baonn@cs.umd.edu
#	Date: 	06/08/2011
####################################################

#======================================
# Benchmark general directory layout 
#======================================

#--------------------------------------
# Parameter check
#--------------------------------------

# Two variable $aut_name and $root_dir should be specified by
# The scripts inlude this configuration file 

if [ -z $aut_name ]
then
   echo "aut_name should be defined before including this configuration file"
   exit 1
fi 

if [ -z $root_dir ]
then
   echo "root_dir should be defined before including this configuration file"
   exit 1
fi 

# Root directory for each aut 
aut_root_dir=$root_dir/auts/$aut_name

if [ ! -e $aut_root_dir ]
then
   echo "Invalid AUT name"
   exit 1
fi

#--------------------------------------
# AUT directory layout 
# Starting from $aut_root_dir
#--------------------------------------

# Script dir
aut_scripts_dir="$aut_root_dir/scripts"

# Application Under Test root directory 
aut_dir="$aut_root_dir/aut"

	# source code directory 
	aut_src_dir="$aut_dir/src"

	# binary directory
	aut_bin_dir="$aut_dir/bin"

	# instrumented binary directory
	aut_inst_dir="$aut_dir/inst"

	# input directory
	# input for aut 
	aut_input_dir=$aut_dir/input

	# coverage artifact dir 
	aut_coverage_artifact_dir=$aut_dir/coverage-artifact

		# Clean cobertura .ser file
		# generated after instrumentation 
		cobertura_data_file_clean="$aut_coverage_artifact_dir/cobertura_clean.ser"

# GUITAR configuration directory
guitar_config_dir="$aut_root_dir/guitar-config"
		aut_configuration_file=$guitar_config_dir/configuration.xml

#--------------------------------------
# Model specific variables
#--------------------------------------

# Models dir
# Containing all artifacts for models 
model_dir="$aut_root_dir/models"

	# Default GUI file
	aut_gui_file=$model_dir/$aut_name.GUI
	# Default EFG file
	aut_efg_file=$model_dir/$aut_name.EFG
	# Default DL file
	aut_dl_file=$model_dir/$aut_name.DL
	# Default Gephi PDF file
	aut_gephi_pdf_file=$model_dir/$aut_name.PDF
	# Default "data" directory for models
	aut_model_data_dir=$model_dir/$aut_name.GUI.data/

	# ripping coverage location 
	ripper_coverage_dir=$model_dir/ripping-coverage

	# ripping log 
	ripper_log_file=$model_dir/$aut_name-ripping.log

#--------------------------------------
# Test suite specific variables
#--------------------------------------

# Test suite dir
# Containing all artifacts for a test suite
testsuite_root=$aut_root_dir/testsuites

	# Coverage Directory
	coverage_dir_name=coverage

		# raw coverage files dir name
		coverage_ser_dir_name=ser

		# html report dir name 
		coverage_html_dir_name=html

	# Test Cases Directory
	testcases_dir_name=testcases

	# Log Directory
	log_dir_name=logs

	# Oracle Directory
	oracles_dir_name=oracles

   # Slice directory
   slice_dir_name=slice


#--------------------------------------
# Fault seed specific variables
#--------------------------------------

# Faults directory
aut_fault_dir=$aut_root_dir/fault
aut_src_fault_dir=$aut_dir/src-fault


#--------------------------------------
# Miscellanious dirs 
#--------------------------------------

tmp_dir=$aut_root_dir/..

tmp_home=$aut_root_dir/home

misc_dir=$aut_root_dir/misc

#--------------------------------------
# Tool configurations 
#--------------------------------------

# defaut tool location 
current_dir=`dirname $0`
default_tool_dir=$root_dir/tools/bin


# GUITAR directory location 
# Change this location to your directory 
if [ -z $GUITAR_HOME ]
then 
   guitar_dir=$default_tool_dir/guitar
else
   guitar_dir=$GUITAR_HOME
fi

cmd_jfcripper=$guitar_dir/dist/guitar/jfc-ripper.sh
cmd_jfcripper_amalga=$guitar_dir/jfc-ripper.sh
cmd_jfcreplayer=$guitar_dir/dist/guitar/jfc-replayer.sh
cmd_jfcreplayer_amalga=$guitar_dir/jfc-replayer.sh

# Cobertura directory location 
# Change this location to your directory 
if [ -z $COBERTURA_HOME ]
then 
   cobertura_dir=$default_tool_dir/cobertura
else
cobertura_dir=$COBERTURA_HOME
fi

cobertura_classpath=$cobertura_dir/cobertura.jar

# Modiffied cobertura report command 
cmd_cobertura_report="$cobertura_dir/cobertura-mod-report-name.sh"

# Orginal cobertura report command 
cmd_cobertura_org_report="$cobertura_dir/cobertura-report.sh"

# Script directory location 
# Change this location to your directory 
if [ -z $SCRIPTS_HOME ]
then 
   scripts_dir=$default_tool_dir/scripts
else
   scripts_dir=$SCRIPTS_HOME
fi

cobertura_classpath=$cobertura_dir/cobertura.jar

#--------------------------------------
# Gephi configuration
#--------------------------------------

gephi_dir=$default_tool_dir/gephi/


#--------------------------------------
# Local machine configurations 
#--------------------------------------

# Comment out this variable to run without external timeout monitor
# ext_timeout="true"

# Enable this flag to collect coverage per step in replayer
colect_coverage=true

# Enable this flag to match window tile using regular expression 
reg_title_match=true
