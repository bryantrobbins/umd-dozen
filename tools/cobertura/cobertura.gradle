apply plugin: 'java'
apply plugin: 'maven'

import groovy.io.FileType

def master = hasProperty('master') ? master : 'guitar05.cs.umd.edu'
def loc = hasProperty('nexusLocation') ? nexusLocation : master + ':8081'
def aut_inst_dir_val = hasProperty('aut_inst_dir') ? aut_inst_dir : ''
def aut_cov_bin_list_val = hasProperty('aut_cov_bin_list') ? aut_cov_bin_list : ''
def coverage_dir_val = hasProperty('coverage_dir') ? coverage_dir : ''

configurations {
	cobertura
}

repositories {
    maven {
          url "http://" + loc + "/nexus/content/groups/public"
    }
}

dependencies {
    cobertura group: 'edu.umd.cs.guitar', name: 'tool-cobertura', version: '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}

task hello << {
	println "Hello Gradle world"
}

task instrument(type: JavaExec) {
	classpath configurations.cobertura
	main = 'net.sourceforge.cobertura.instrument.Main'
	args '--datafile', cobertura_data_file_clean, '--destination', aut_inst_dir_val, aut_cov_bin_list_val
}

task report(type: JavaExec) {
	classpath configurations.cobertura
	main = 'net.sourceforge.cobertura.reporting.Main'
	args '--datafile', cobertura_data_file_clean, '--format', 'xml', '--destination', coverage_dir_val
}

task merge(type: JavaExec) {
	def alist = ['--datafile', cobertura_data_file_clean]
	def dir = new File(coverage_dir_val)
	if(project.gradle.startParameter.taskNames.contains('merge')){
		dir.eachFileRecurse (FileType.FILES) { file ->
 			alist << file.toString()
		}
	}

	classpath configurations.cobertura
	main = 'net.sourceforge.cobertura.merge.Main'
	args alist
}
